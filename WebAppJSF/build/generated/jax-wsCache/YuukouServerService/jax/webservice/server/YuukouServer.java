
package jax.webservice.server;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b20 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "YuukouServer", targetNamespace = "http://server.webservice.jax/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface YuukouServer {


    /**
     * 
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "launchCycle", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.LaunchCycle")
    @Action(input = "http://server.webservice.jax/YuukouServer/launchCycle")
    public void launchCycle();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkConfigHealth", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.CheckConfigHealth")
    @ResponseWrapper(localName = "checkConfigHealthResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.CheckConfigHealthResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/checkConfigHealthRequest", output = "http://server.webservice.jax/YuukouServer/checkConfigHealthResponse")
    public String checkConfigHealth();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "who", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.Who")
    @ResponseWrapper(localName = "whoResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.WhoResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/whoRequest", output = "http://server.webservice.jax/YuukouServer/whoResponse")
    public String who();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "lastDefault", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.LastDefault")
    @ResponseWrapper(localName = "lastDefaultResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.LastDefaultResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/lastDefaultRequest", output = "http://server.webservice.jax/YuukouServer/lastDefaultResponse")
    public String lastDefault();

    /**
     * 
     * @param idRoom
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "healthForRoom", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthForRoom")
    @ResponseWrapper(localName = "healthForRoomResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthForRoomResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/healthForRoomRequest", output = "http://server.webservice.jax/YuukouServer/healthForRoomResponse")
    public String healthForRoom(
        @WebParam(name = "idRoom", targetNamespace = "")
        String idRoom);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "healthForAllRooms", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthForAllRooms")
    @ResponseWrapper(localName = "healthForAllRoomsResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthForAllRoomsResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/healthForAllRoomsRequest", output = "http://server.webservice.jax/YuukouServer/healthForAllRoomsResponse")
    public String healthForAllRooms();

    /**
     * 
     * @param last
     * @param idUser
     * @param who
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchHistoryUser", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.SearchHistoryUser")
    @ResponseWrapper(localName = "searchHistoryUserResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.SearchHistoryUserResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/searchHistoryUserRequest", output = "http://server.webservice.jax/YuukouServer/searchHistoryUserResponse")
    public String searchHistoryUser(
        @WebParam(name = "idUser", targetNamespace = "")
        String idUser,
        @WebParam(name = "who", targetNamespace = "")
        boolean who,
        @WebParam(name = "last", targetNamespace = "")
        boolean last);

    /**
     * 
     * @param startTime
     * @param label
     * @param rqt
     * @param factor
     * @param endTime
     * @param rqtLqbel
     * @return
     *     returns jax.webservice.server.ImageTransfered
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGraphWithRequest", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetGraphWithRequest")
    @ResponseWrapper(localName = "getGraphWithRequestResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetGraphWithRequestResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/getGraphWithRequestRequest", output = "http://server.webservice.jax/YuukouServer/getGraphWithRequestResponse")
    public ImageTransfered getGraphWithRequest(
        @WebParam(name = "rqt", targetNamespace = "")
        String rqt,
        @WebParam(name = "rqtLqbel", targetNamespace = "")
        String rqtLqbel,
        @WebParam(name = "label", targetNamespace = "")
        String label,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime,
        @WebParam(name = "factor", targetNamespace = "")
        int factor);

    /**
     * 
     * @param startTime
     * @param label
     * @param rqt
     * @param factor
     * @param endTime
     * @param rqtLqbel
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGraphWithRequestUsingJson", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetGraphWithRequestUsingJson")
    @ResponseWrapper(localName = "getGraphWithRequestUsingJsonResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetGraphWithRequestUsingJsonResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/getGraphWithRequestUsingJsonRequest", output = "http://server.webservice.jax/YuukouServer/getGraphWithRequestUsingJsonResponse")
    public String getGraphWithRequestUsingJson(
        @WebParam(name = "rqt", targetNamespace = "")
        String rqt,
        @WebParam(name = "rqtLqbel", targetNamespace = "")
        String rqtLqbel,
        @WebParam(name = "label", targetNamespace = "")
        String label,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime,
        @WebParam(name = "factor", targetNamespace = "")
        int factor);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListRooms", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetListRooms")
    @ResponseWrapper(localName = "getListRoomsResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetListRoomsResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/getListRoomsRequest", output = "http://server.webservice.jax/YuukouServer/getListRoomsResponse")
    public String getListRooms();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "healthResourcesReportForAllRooms", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthResourcesReportForAllRooms")
    @ResponseWrapper(localName = "healthResourcesReportForAllRoomsResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthResourcesReportForAllRoomsResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/healthResourcesReportForAllRoomsRequest", output = "http://server.webservice.jax/YuukouServer/healthResourcesReportForAllRoomsResponse")
    public String healthResourcesReportForAllRooms();

    /**
     * 
     * @param idRoom
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "healthResourcesReportForRoom", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthResourcesReportForRoom")
    @ResponseWrapper(localName = "healthResourcesReportForRoomResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.HealthResourcesReportForRoomResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/healthResourcesReportForRoomRequest", output = "http://server.webservice.jax/YuukouServer/healthResourcesReportForRoomResponse")
    public String healthResourcesReportForRoom(
        @WebParam(name = "idRoom", targetNamespace = "")
        String idRoom);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSitesInformation", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetSitesInformation")
    @ResponseWrapper(localName = "getSitesInformationResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetSitesInformationResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/getSitesInformationRequest", output = "http://server.webservice.jax/YuukouServer/getSitesInformationResponse")
    public String getSitesInformation();

    /**
     * 
     * @param type
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRoomsType", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetRoomsType")
    @ResponseWrapper(localName = "getRoomsTypeResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.GetRoomsTypeResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/getRoomsTypeRequest", output = "http://server.webservice.jax/YuukouServer/getRoomsTypeResponse")
    public String getRoomsType(
        @WebParam(name = "type", targetNamespace = "")
        String type);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isCycleRunning", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.IsCycleRunning")
    @ResponseWrapper(localName = "isCycleRunningResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.IsCycleRunningResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/isCycleRunningRequest", output = "http://server.webservice.jax/YuukouServer/isCycleRunningResponse")
    public boolean isCycleRunning();

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "askMaintenance", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.AskMaintenance")
    @ResponseWrapper(localName = "askMaintenanceResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.AskMaintenanceResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/askMaintenanceRequest", output = "http://server.webservice.jax/YuukouServer/askMaintenanceResponse")
    public boolean askMaintenance();

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "endMaintenance", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.EndMaintenance")
    @ResponseWrapper(localName = "endMaintenanceResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.EndMaintenanceResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/endMaintenanceRequest", output = "http://server.webservice.jax/YuukouServer/endMaintenanceResponse")
    public boolean endMaintenance();

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isMaintenanceScheduled", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.IsMaintenanceScheduled")
    @ResponseWrapper(localName = "isMaintenanceScheduledResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.IsMaintenanceScheduledResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/isMaintenanceScheduledRequest", output = "http://server.webservice.jax/YuukouServer/isMaintenanceScheduledResponse")
    public boolean isMaintenanceScheduled();

    /**
     * 
     * @param days
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "last", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.Last")
    @ResponseWrapper(localName = "lastResponse", targetNamespace = "http://server.webservice.jax/", className = "jax.webservice.server.LastResponse")
    @Action(input = "http://server.webservice.jax/YuukouServer/lastRequest", output = "http://server.webservice.jax/YuukouServer/lastResponse")
    public String last(
        @WebParam(name = "days", targetNamespace = "")
        int days);

}
